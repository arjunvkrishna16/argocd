apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: kafka-cruise-control
    app.kubernetes.io/name: kafka-cruise-control
  name: kafka-cruise-control
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-cruise-control
      app.kubernetes.io/name: kafka-cruise-control
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: kafka-cruise-control
        app.kubernetes.io/name: kafka-cruise-control
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: BOOTSTRAP_SERVERS
          value: kafka.kafka.svc.cluster.local:9092
        image: arjunvkrishna/cruise-control:1.0.5
        imagePullPolicy: Always
        name: kafka-cruise-control
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /cruise-control/config/cruisecontrol.properties
          name: config-volume
          subPath: cruisecontrol.properties
        - mountPath: /cruise-control/config/capacity.json
          name: config-volume
          subPath: capacity.json
        - mountPath: /cruise-control/config/clusterConfigs.json
          name: config-volume
          subPath: clusterConfigs.json
        - mountPath: /cruise-control/config/log4j.properties
          name: config-volume
          subPath: log4j.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: cruisecontrol-properties
        name: config-volume